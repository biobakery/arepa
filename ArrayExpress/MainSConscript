#Import('env')

import os, string, re
import repo_config as repoconfig

path2scripts = os.getcwd()
import sys
sys.path.append(string.join(string.split(path2scripts,'/')[:-1], '/')+'/Scripts')
import shared_funcs as shf


#------------------------------------------------------------------------------------------------#

def _download_taxdump_(target, source, env): 
	reponame = string.join(string.split(target[0].get_abspath(),'/')[:-1],'/')
	os.popen('cd ' + reponame + ' && wget -N ' + repoconfig.shared_taxonomy_website)

#---THIS FUNCTION MOVED TO SHARED---#
def _untar_(target, source, env): 
	os.popen('tar -xzf ' + source[0].rstr())
#---THIS FUNCTION MOVED TO SHARED---#


def _download_experiments_(target, source, env):
 	reponame = string.join(string.split(target[0].get_abspath(),'/')[:-1],'/')
	os.popen('cd ' + reponame + ' && wget -N ' + repoconfig.arrayexpress.data_website[0])

#---THIS FUNCTION MOVED TO SHARED---#
# command + 2 inputs + 1 output :  source = [command, input1, input2] target = [target1]
def _run_shellcmd_C21_ (target, source, env):	
	os.popen(source[0].get_abspath() + ' ' + source[1].rstr() + ' < ' + source[2].rstr() + ' > ' + target[0].rstr()) 
#---THIS FUNCTION MOVED TO SHARED---#


def _process_data_(target, source, env): 
	reponame = string.join(string.split(source[0].get_abspath(),'/')[:-1],'/')
	
	f = open( source[0].rstr(), 'r')
	while 1:
		line = f.readline()
		if line == '': break

		# here checks the line format
		try:
			re.match('E-([^-]+)-\d' ,line).group(0)
		except AttributeError:
			print ( "WARN - illegal ID: " + line )
			continue

		try:
        		os.makedirs(reponame + '/' + string.strip(line))
		except:
			continue
	f.close()
	SConscript(reponame + '/SConscript', exports=['reponame'])


#-------------------------This function currently not in use --------------------------------------------------------------#
#-------------------------check it in the future in point of view of the working directory---------------------------------#
#-------------------------because all the stuff run from arepa directory---------------------------------------------------#

def _create_kospcl_(target, source, env): 
	os.popen('Combiner E-*/*/*_w.txt | grep -v EWEIGHT > temp1')
	os.popen('./../Scripts/transpose.rb < temp1 | KNNImputer -k 0 -m 0.333 -s 0 > temp2')
	os.popen('grep -v EWEIGHT temp2 | ./../Scripts/transpose.rb | KNNImputer -k 0 -m 0.333 -s 1 > temp3 ')

	in_f =open('temp3','r')
	out_f  = open(target[0],'w')

	line = in_f.readline()
	line = string.split(line,'\t')
	line = line[:1] + ['NAME', 'GWEIGHT'] + line[1:]
	out_f.write(string.join(line,'\t'))  

	line  = ['EWEIGHT','',''] +  ['1']*(len(line)-3)
	out_f.write(string.join(line,'\t') + '\n')  
	
	while 1:
        	line = in_f.readline()
        	if line == '': break
		line = string.split(line,'\t')
		line = line[:1] + line[:1] + ['1'] + line[1:]
		out_f.write(string.join(line,'\t'))  
	
	in_f.close()
	out_f.close()

#------------------------------------------------------------------------------------------------#	
	
env = Environment() 

#env.Command(['dwnld_taxdump'], [], _download_taxdump_) # TEMPORARY COMMENTED

#env.Command(['names.dmp', 'nodes.dmp'], ['taxdump.tar.gz', 'dwnld_taxdump'], shf._untar_)# TEMPORARY COMMENTED replace with the following line
env.Command(['names.dmp', 'nodes.dmp'], ['taxdump.tar.gz'], shf._untar_)

env.Command(['species.txt'], ['nodes2species.rb', 'names.dmp', 'nodes.dmp'],shf._shcmd_Nm1i_1i_1o_)

#env.Command(['dwnld_arrayexpress'], [], _download_experiments_)# TEMPORARY COMMENTED

#env.Command(['ids.txt'], ['experiments2ids.rb', 'species.txt', 'experiments','dwnld_arrayexpress'], shf._shcmd_Nm1i_1i_1o_iF_)# TEMPORARY COMMENTED replace with the following line
env.Command(['ids.txt'], ['experiments2ids.rb', 'species.txt', 'experiments'], shf._shcmd_Nm1i_1i_1o_)

env.Command(['processdata'], ['ids.txt'], _process_data_)

#env.Command(['kos.pcl'],['processdata'],_create_kospcl_) 