import os, string, time
import repo_config as repoconfig

def _nodes2species_(target, source, env): 
	os.popen("./" + source[0].rstr() + " " + source[1].rstr() + " < " + source[2].rstr() + " > " + target[0].rstr()) 

def _unzip_(target, source, env): 
	os.popen("unzip "+source[0].rstr() )
	os.popen("mv psimitab/" + target[0].rstr() + " " + target[0].rstr()) 
	os.popen("rm -r psimitab")

def _untar_(target, source, env): 
	os.popen("tar -xzf " + source[0].rstr())

def _process_data_by_species_(target, source, env): 
	os.popen("./" + source[0].rstr() + " " +source[1].rstr() + " < " + source[2].rstr() )
	subdirs = map(lambda x: string.strip(x),os.popen("find . -maxdepth 1 -type d -name \"_*\"").readlines())
	SConscript(map(lambda x: x + '/SConscript', subdirs))
	
def _download_intact_(target, source, env): 
	os.popen("wget -N " + repoconfig.intact.data_website[0])

def _download_taxdump_(target, source, env): 
	os.popen("wget -N " + repoconfig.intact.taxonomy_website)


env = Environment() 

env.Command(['dwnld_intact'], [], _download_intact_)
env.Command(['dwnld_taxdump'], [], _download_taxdump_)

env.Command(['intact.txt'], ['intact.zip', 'dwnld_intact'], _unzip_)
env.Command(['names.dmp', 'nodes.dmp'], ['taxdump.tar.gz', 'dwnld_taxdump'], _untar_)

env.Command(['species.txt'], ['nodes2species.rb', 'names.dmp', 'nodes.dmp'], _nodes2species_)
env.Command(['processdata'], ['subdirectories.rb', 'species.txt', 'intact.txt'], _process_data_by_species_)


 
